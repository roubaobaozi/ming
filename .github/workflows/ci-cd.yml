# This is a basic workflow to help you get started with Actions
# https://www.freecodecamp.org/news/learn-to-use-github-actions-step-by-step-guide/

name: CI/CD

# Controls when the workflow will run
on:
  workflow_call:
    inputs:
      is_staging:
        description: The flag for whether to use staging or production
        default: false
        required: false
        type: boolean
      deploy:
        description: The flag for triggering a deployment
        default: false
        required: false
        type: boolean

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    name: Build
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Runs npm ci
      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Run linter
        run: npm run lint --if-present
      - name: Run tests
        run: npm test --if-present
      - name: Build package
        run: npm run build --if-present
      - name: Upload the dist folder to GitHub
        if: inputs.deploy
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/client/
          retention-days: 1
  deploy:
    name: Publish to server
    needs: build
    runs-on: ubuntu-latest
    if: inputs.deploy
    steps:
      - name: Get latest files
        uses: actions/checkout@v4
      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Get Build
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/
          merge-multiple: true
      - name: Sync files
        uses: SamKirkland/FTP-Deploy-Action@v4.3.5
        with:
          # dry-run: true
          protocol: ftps
          server: ${{ secrets.FTP_SERVER }}
          port: 21
          timeout: 120000
          local-dir: ./dist/
          server-dir: ${{ inputs.is_staging && './subdomains/dev/public_html/' || './public_html/' }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
